version: 0.2
env:
  secrets-manager:
    SONARCLOUD_TOKEN: StudentTaskAvinash:SonarToken
    SONARCLOUD_ORG: StudentTaskAvinash:Organization
    PROJECTKEY: StudentTaskAvinash:ProjectKey
    HOST: StudentTaskAvinash:SonarHost

phases:
  install:
    runtime-versions:
      python: 3.9
      java: corretto21
  pre_build:
    commands:
      - yum update -y
      - yum install -y jq wget
      - export SONARCLOUD_TOKEN=$(aws secretsmanager get-secret-value --secret-id StudentTaskAvinash:SonarToken --query 'SecretString' --output text)
      - export SONARCLOUD_ORG=$(aws secretsmanager get-secret-value --secret-id StudentTaskAvinash:Organization --query 'SecretString' --output text)
      - export PROJECTKEY=$(aws secretsmanager get-secret-value --secret-id StudentTaskAvinash:ProjectKey --query 'SecretString' --output text)
      - export HOST=$(aws secretsmanager get-secret-value --secret-id StudentTaskAvinash:SonarHost --query 'SecretString' --output text)
      - wget https://archive.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
      - tar xzf apache-maven-3.5.4-bin.tar.gz
      - ln -s apache-maven-3.5.4 maven
      - export PATH=$PATH:/maven/bin
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      - mv sonar-scanner-3.3.0.1492-linux /sonar-scanner
      - export PATH=$PATH:/sonar-scanner/bin/
  build:
    commands:
      - find / -name pom.xml -exec mv {} ./pom.xml \; || true
      - mvn sonar:sonar -Dsonar.login=$SONARCLOUD_TOKEN -Dsonar.host.url=$HOST -Dsonar.projectKey=$PROJECTKEY -Dsonar.organization=$SONARCLOUD_ORG
      - sleep 5
      - RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=$PROJECTKEY")
      - if [ "$RESPONSE" != "200" ]; then exit 1; fi
artifacts:
  files:
    - target/*.jar
    - target/site/**/*
