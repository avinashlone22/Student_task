version: 0.2
env:
  secrets-manager:
    SONARCLOUD_TOKEN: StudentTaskAvinash:sonartoken
    SONARCLOUD_ORG: StudentTaskAvinash:Organization
    PROJECTKEY: StudentTaskAvinash:Project
    HOST: StudentTaskAvinash:Host

phases:
  install:
    runtime-versions:
      python: 3.9
      java: corretto21
    commands:
      - echo "Installing dependencies..."
      - yum update -y
      - yum install -y jq
      - echo "Installing Maven..."
      - wget https://archive.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
      - tar xzf apache-maven-3.5.4-bin.tar.gz
      - mv apache-maven-3.5.4 /usr/local/maven
      - export PATH=$PATH:/usr/local/maven/bin
      - echo "Installing Sonar Scanner..."
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip sonar-scanner-cli-3.3.0.1492-linux.zip
      - mv sonar-scanner-3.3.0.1492-linux /usr/local/sonar-scanner
      - export PATH=$PATH:/usr/local/sonar-scanner/bin

  pre_build:
    commands:
      - echo "Validating environment variables..."
      - echo "SONARCLOUD_TOKEN: $SONARCLOUD_TOKEN"
      - echo "SONARCLOUD_ORG: $SONARCLOUD_ORG"
      - echo "PROJECTKEY: $PROJECTKEY"
      - echo "HOST: $HOST"
      - echo "Pre-build checks complete."

  build:
    commands:
      - echo "Running Maven SonarCloud analysis..."
      - mvn sonar:sonar \
            -Dsonar.login=$SONARCLOUD_TOKEN \
            -Dsonar.host.url=$HOST \
            -Dsonar.projectKey=$PROJECTKEY \
            -Dsonar.organization=$SONARCLOUD_ORG
      - echo "SonarCloud analysis completed. Checking Quality Gate status..."
      - RESPONSE=$(curl -s -u $SONARCLOUD_TOKEN: "$HOST/api/qualitygates/project_status?projectKey=$PROJECTKEY" | jq -r '.projectStatus.status')
      - echo "Quality Gate status: $RESPONSE"
      - if [ "$RESPONSE" != "OK" ]; then echo "Quality Gate failed."; exit 1; fi

artifacts:
  files:
    - '**/*'
  discard-paths: no
